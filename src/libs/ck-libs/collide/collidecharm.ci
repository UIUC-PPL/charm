module collidecharm {
  message objListMsg;

  initnode void registerMinMaxBboxDims(void);

  group collideClient {
  };
  group serialCollideClient : collideClient {
    entry serialCollideClient();
    entry serialCollideClient(Ckallback clientCb_);
    entry void reductionDone(CkReductionMsg *m);
    entry [reductiontarget] void voxelCountDone(int result);
  };

  group syncReductionMgr {
    entry syncReductionMgr();
    entry void childProd(int stepCount);
    entry void childDone(int stepCount);
  };
  group collideMgr : syncReductionMgr {
    entry collideMgr(CollideGrid3d gridMap,
        CProxy_collideClient client,
        CkArrayID cells);
    entry void voxelMessageRecvd(void);
    entry void recvMap(std::unordered_map<int, int> localHistMap[size], int size);
    entry [reductiontarget] void receiveMinMaxData(CkReductionMsg *msg);

    entry void histogram(double minMax[6], int numBuckets[3]);
  };

  array [3D] collideVoxel {
    entry collideVoxel(void);
    entry [createhere] void add(objListMsg *);
    //    entry [createhome] void add(objListMsg *);
    entry void startCollision(int step,
        CollideGrid3d gridMap,
        CProxy_collideClient client);
  };
};

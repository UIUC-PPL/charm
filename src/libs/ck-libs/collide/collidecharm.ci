module collidecharm {
  message objListMsg;

  group collideClient {
  };
  group serialCollideClient : collideClient {
    entry serialCollideClient();
    entry serialCollideClient(CkCallback clientCb_);
    entry void reductionDone(CkReductionMsg *m);
  };

  group distributedCollideClient : collideClient {
    entry distributedCollideClient(CkCallback clientCb_);
  }

  chare [migratable] statsCollector {
    entry statsCollector();
    entry [reductiontarget] void voxelCountDone(int result);
  };

  group syncReductionMgr {
    entry syncReductionMgr();
    entry void childProd(int stepCount);
    entry void childDone(int stepCount);
  };

  group collideMgr : syncReductionMgr {
    entry collideMgr(CollideGrid3d gridMap,
        CProxy_collideClient client,
        CkArrayID cells,
        collideStats statObj);
    entry void voxelMessageRecvd(void);
  };

  array [3D] collideVoxel {
    entry collideVoxel();
    //    entry [createhere] void add(objListMsg *);
    entry [createhome] void add(objListMsg *);
    entry void initiateCollision(CProxy_collideMgr mg);
  };
};
